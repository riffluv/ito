/**\n * Pure host action model.\n * Receives current room snapshot and players/onlineCount, returns an ordered\n * list of action intents (no side-effects, no onClick binding).\n * UI層（useHostActions）が onClick を割当てて使用する。\n */\nimport type { RoomDoc, PlayerDoc } from "@/lib/types";\n\nexport type HostIntentKey =\n  | "primary"\n  | "quickStart"\n  | "advancedMode"\n  | "evaluate";\n\nexport type HostIntent = {\n  key: HostIntentKey;\n  label: string;\n  disabled?: boolean;\n  /** disabledの理由などUIヒント */\n  reason?: string;\n  /** 追加情報（pickTopicのカテゴリ名など） */\n  payload?: any;\n  palette?: "brand" | "orange" | "gray" | "teal";\n  variant?: "solid" | "outline" | "ghost" | "subtle" | "soft" | "link";\n};\n\nexport function buildHostActionModel(\n  room: RoomDoc & { id?: string },\n  players: (PlayerDoc & { id: string })[],\n  onlineCount: number | undefined,\n  topicTypeLabels: readonly string[],\n  hostPrimary: { label: string } | null\n): HostIntent[] {\n  const MIN_PLAYERS_FOR_DEAL = 2;\n  const status = (room as any)?.status as string | undefined;\n  const resolveMode = (room as any)?.options?.resolveMode as string | undefined;\n  const topicSelected = !!(room as any)?.topic;\n  const proposal: string[] = ((room as any)?.order?.proposal || []) as string[];\n  const assigned = players.filter((p) => typeof (p as any)?.number === "number").length;\n\n  const intents: HostIntent[] = [];\n\n  // finished状態でのみprimaryアクション（もう一度）を表示\n  
