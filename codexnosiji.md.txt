チェックするときに入室退室を繰り返したんだよね。多分そのせいかな？ブラウザ４つ立ち上げてテストしまくってた。
だからclaude codeに　firebaseを現在のアプリに最適化するようにやってくれる、
完全な指示文を教えて。

serena mcpとclaude codeつながってるから既存のプロジェクトは把握しやすいと思う。言葉だけでなんとかなると思うよ
コピーする
以下の内容をそのまま Claude Code に渡してください。
（ブラウザを4つ開いて入退室を繰り返したテストが Firestore リード制限を大量消費した可能性が高いことも補足しています。）

Claude Code への指示文
背景
ブラウザを複数起動し、短時間で入退室を繰り返した結果、rooms/{roomId} に対する BatchGetDocuments が爆発的に増加し、Firestore リード上限 (429 resource-exhausted) に達してオンライン対戦が停止している。

アプリの現行設計では、ロビー人数取得や入室処理で同じドキュメントを繰り返し読み込む箇所が複数存在するため、少人数でも短時間で無料枠を使い切りやすい。

目的
既存のプロジェクト (online-ito) のコードを最適化し、Firestore リード数を大幅に削減する。

具体的な改善タスク
入室処理 (joinRoomFully) の二重実行を防止し、同じドキュメントの重複リードをなくす

お勧めのタスク
`useRoomState` での入室処理を一度だけ実行するガード追加

タスクを開始
ロビー人数確認 (useLobbyCounts) での不要な Firestore リードを抑える

お勧めのタスク
`VERIFY_SINGLE` をデフォルト無効化し、フォールバックの呼び出し頻度を下げる

タスクを開始
部屋ドキュメントを1回だけ取得し、joinRoomFully 内で共有する

お勧めのタスク
`roomService.ts` 内で `rooms/{roomId}` のリードを1回にまとめる

タスクを開始
リアルタイム監視とキャッシュによるリード削減

お勧めのタスク
`onSnapshot` とキャッシュを活用してリード数を最適化

タスクを開始
部屋の存続管理を RTDB の TTL などに移し、Firestore ポーリングを削減

お勧めのタスク
ゲーム中の部屋は残しつつ不要なポーリングを廃止する

タスクを開始
実装後の確認
Firestore の使用量メトリクスで 1 日あたりのリードが大幅に減少していることを確認。

ブラウザを複数立ち上げて入退室テストを行い、429 エラーが発生しないことを検証。

既存の単体テスト・E2E テストを通して機能が壊れていないか確認。

以上の指示を Claude Code に渡すことで、Firebase 利用がアプリに最適化されるはずです。